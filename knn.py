# -*- coding: utf-8 -*-
"""KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QLZWk7RGA2Zb85ngL3QVgaB-33m_Oks_
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix, ConfusionMatrixDisplay
import matplotlib.pyplot as plt

data = pd.read_csv('/content/fetal_health.csv')

print("Shape of the dataset:", data.shape)

# check number of missing values
print(data.isnull().sum())

# Split the dataset into features and target variable
x = data.drop(columns=['fetal_health'])
y = data['fetal_health']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# standardization the features
scaler = StandardScaler()
x_train = scaler.fit_transform(x_train)
x_test = scaler.transform(x_test)

# Training of the KNN model
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(x_train, y_train)

# Model predictions with the trained model
y_pred = knn.predict(x_test)

# Calculate the accuracy of the KNN classifier
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

# Calculate precision, recall, and F1-score for KNN model classifier
print("\nKNN Classification Report:")
print(classification_report(y_test, y_pred, target_names=['Normal', 'Suspect', 'Pathological']))

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['Normal', 'Suspect', 'Pathological'])
disp.plot(cmap=plt.cm.Greens)
plt.show()